{{- $ca := genCA "Kiam CA" 365 -}}
{{- $serverCert := genSignedCert "Kiam Server" (list "127.0.0.1") (list "kiam-server" "kiam-server:443" "127.0.0.1:443" "127.0.0.1:9610" "localhost" "127.0.0.1" "::1") 365 $ca -}}
{{- $agentCert := genSignedCert "Kiam Agent" nil nil 365 $ca -}}
kind: Secret
apiVersion: v1
type: Opaque
metadata:
  name: kiam-server-tls
  annotations:
    # This means these secrets will be generated exactly once. If this chart release is ever deleted
    # and recreated, both kiam-agent and kiam-server must be restart to get the new secrets
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
data:
  ca: {{ $ca.Cert | b64enc }}
  cert: {{ $serverCert.Cert | b64enc }}
  key: {{ $serverCert.Key | b64enc }}
---
kind: Secret
apiVersion: v1
type: Opaque
metadata:
  name: kiam-agent-tls
  annotations:
    # This means these secrets will be generated exactly once. If this chart release is ever deleted
    # and recreated, both kiam-agent and kiam-server must be restart to get the new secrets
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
data:
  ca: {{ $ca.Cert | b64enc }}
  cert: {{ $agentCert.Cert | b64enc }}
  key: {{ $agentCert.Key | b64enc }}

---
# This Deployment "does nothing" but is here to overcome a bug in "helm". Since the kiam-secrets
# chart creates nothing but Secrets, helm thinks it is broken and marks the release as FAILED even
# though it has succeeded: https://github.com/helm/helm/issues/4670
# By adding a Deployment with no replicas, the error doesn't occur.
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: no-op-kiam-secrets-helm-deployment
  labels:
    app: no-op-kiam-secrets-helm-deployment
spec:
  replicas: 0
  template:
    metadata:
      labels:
        app: no-op-kiam-secrets-helm-deployment
    spec:
      containers:
      - name: no-op-pod
        image: ubuntu:latest
